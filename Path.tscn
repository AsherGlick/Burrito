[gd_scene load_steps=4 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
//render_mode unshaded, blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = vec2(UV.y, -UV.x);
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo_tex.rgb;
	ALPHA = albedo_tex.a;
	EMISSION = albedo_tex.rgb;
	METALLIC = 0.0;
	//ALPHA_SCISSOR = 0.5;
	ROUGHNESS = 1.0;
	SPECULAR = 0.0;
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 1 )

[node name="Path" type="Path"]
curve = null

[node name="CSGPolygon" type="CSGPolygon" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 2.32831e-09, 0, -2.32831e-09, 1, 0, 0, 0 )
invert_faces = true
polygon = PoolVector2Array( 0, 0, 1, 0, 0, 0 )
mode = 2
path_node = NodePath("..")
path_interval = 1.0
path_rotation = 2
path_local = false
path_continuous_u = false
path_joined = false
smooth_faces = true
material = SubResource( 2 )
